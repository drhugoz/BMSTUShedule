# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.model_class import ModelClass
from swagger_server import util


class CompositeClass(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, oddweek: ModelClass=None, evenweek: ModelClass=None):  # noqa: E501
        """CompositeClass - a model defined in Swagger

        :param oddweek: The oddweek of this CompositeClass.  # noqa: E501
        :type oddweek: ModelClass
        :param evenweek: The evenweek of this CompositeClass.  # noqa: E501
        :type evenweek: ModelClass
        """
        self.swagger_types = {
            'oddweek': ModelClass,
            'evenweek': ModelClass
        }

        self.attribute_map = {
            'oddweek': 'oddweek',
            'evenweek': 'evenweek'
        }

        self._oddweek = oddweek
        self._evenweek = evenweek

    @classmethod
    def from_dict(cls, dikt) -> 'CompositeClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompositeClass of this CompositeClass.  # noqa: E501
        :rtype: CompositeClass
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oddweek(self) -> ModelClass:
        """Gets the oddweek of this CompositeClass.


        :return: The oddweek of this CompositeClass.
        :rtype: ModelClass
        """
        return self._oddweek

    @oddweek.setter
    def oddweek(self, oddweek: ModelClass):
        """Sets the oddweek of this CompositeClass.


        :param oddweek: The oddweek of this CompositeClass.
        :type oddweek: ModelClass
        """
        if oddweek is None:
            raise ValueError("Invalid value for `oddweek`, must not be `None`")  # noqa: E501

        self._oddweek = oddweek

    @property
    def evenweek(self) -> ModelClass:
        """Gets the evenweek of this CompositeClass.


        :return: The evenweek of this CompositeClass.
        :rtype: ModelClass
        """
        return self._evenweek

    @evenweek.setter
    def evenweek(self, evenweek: ModelClass):
        """Sets the evenweek of this CompositeClass.


        :param evenweek: The evenweek of this CompositeClass.
        :type evenweek: ModelClass
        """
        if evenweek is None:
            raise ValueError("Invalid value for `evenweek`, must not be `None`")  # noqa: E501

        self._evenweek = evenweek
